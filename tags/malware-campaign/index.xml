<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Malware Campaign on TheAbsnt</title>
    <link>https://theabsnt.github.io/tags/malware-campaign/</link>
    <description>Recent content in Malware Campaign on TheAbsnt</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Aug 2025 01:59:15 +0530</lastBuildDate>
    <atom:link href="https://theabsnt.github.io/tags/malware-campaign/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Memory-Only Mayhem: JScript to Powershell to .NET Loader to Infostealer</title>
      <link>https://theabsnt.github.io/posts/formbook-infection-chain/</link>
      <pubDate>Mon, 25 Aug 2025 01:59:15 +0530</pubDate>
      <guid>https://theabsnt.github.io/posts/formbook-infection-chain/</guid>
      <description>&lt;h1 id=&#34;an-introduction&#34;&gt;An Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Welcome back and I hope you guys are having a nice time :)&lt;/p&gt;&#xA;&lt;p&gt;Couple of weeks ago, while i was looking for a malware to analyze, I came across this &lt;a href=&#34;https://bazaar.abuse.ch/sample/401228957d3c13eaacfdf3154bb0c1f146b59c3615cd40848a54a211a7e14f72/&#34;&gt;sample&lt;/a&gt; on malware bazaar, that is initially a &lt;a href=&#34;https://en.wikipedia.org/wiki/JScript&#34;&gt;JScript&lt;/a&gt; file.&#xA;When started analyzing it enfolds into multi-staged infection chain incorporating from jscript file, to in memory execution of layers of powershell payloads, to stenography, to dynamically loading packed and obfuscated .NET dll, to exploiting a LOLBIN to dynamic execution of an infostealer. A key highlight of this infection chain is its heavy reliance on in-memory execution, minimizing disk footprint across stages.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Guardians Paradox: When Protector becomes Predator - Malware Version</title>
      <link>https://theabsnt.github.io/posts/guardians-paradox/</link>
      <pubDate>Sat, 29 Mar 2025 00:47:42 +0530</pubDate>
      <guid>https://theabsnt.github.io/posts/guardians-paradox/</guid>
      <description>&lt;h1 id=&#34;the-introduction&#34;&gt;The introduction&lt;/h1&gt;&#xA;&lt;p&gt;Welcome back!.. hope you&amp;rsquo;re having a nice time :)&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;We often trust our security software to stand as an unbreakable wall against malware and attacks, but what happens when that very wall is weaponized against us?&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;In this blog, we&amp;rsquo;ll analyse a malware and learn along the way, which was found in a recent discovery by Trellix Advanced Research Center &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; that reveals a malware campaign that weaponizes a legitimate Avast Anti-Rootkit driver(&lt;code&gt;aswArPot.sys&lt;/code&gt;) to bypass security measures.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Analysis of ChineseAPT: RedDelta&#39;s Recent Infection Chain</title>
      <link>https://theabsnt.github.io/posts/reddelta-malware-campaign-aug-2024/</link>
      <pubDate>Tue, 18 Feb 2025 17:32:36 +0530</pubDate>
      <guid>https://theabsnt.github.io/posts/reddelta-malware-campaign-aug-2024/</guid>
      <description>&lt;h1 id=&#34;the-introduction&#34;&gt;The introduction&lt;/h1&gt;&#xA;&lt;p&gt;In this blog, we&amp;rsquo;ll explore a recent infection chain of malware campaign carried out by Chinese State Sponsored threat actor RedDelta to deliver customized PlugX malware.&lt;/p&gt;&#xA;&lt;p&gt;The infection chain we gonna cover was observed in later half of 2024, which consist of MSC(Microsoft Management Console Snap-In Control) file as the first-stage component. Upon execution, the MSC file was configured to execute VBScript that download and installs a remotely hosted Windows Installer (MSI) file, this MSI file then drops a legitimate executable vulnerable to DLL search order hijacking, a malicious loader DLL written in NIM programming language, and a DAT file containg encrypted PlugX payload and displays a decoy document.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
