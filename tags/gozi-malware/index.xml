<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gozi Malware on TheAbsnt</title>
    <link>https://theabsnt.github.io/tags/gozi-malware/</link>
    <description>Recent content in Gozi Malware on TheAbsnt</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Oct 2024 00:40:09 +0530</lastBuildDate>
    <atom:link href="https://theabsnt.github.io/tags/gozi-malware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Challenge #1: Gozi String Decryption</title>
      <link>https://theabsnt.github.io/posts/z2a_chall/ch01_gozi_string_decryption/</link>
      <pubDate>Thu, 03 Oct 2024 00:40:09 +0530</pubDate>
      <guid>https://theabsnt.github.io/posts/z2a_chall/ch01_gozi_string_decryption/</guid>
      <description>&lt;h1 id=&#34;whats-the-agenda&#34;&gt;what&amp;rsquo;s the agenda&lt;/h1&gt;&#xA;&lt;p&gt;Welcome back :)&lt;/p&gt;&#xA;&lt;p&gt;Today we&amp;rsquo;ll go through a challenge from &lt;a href=&#34;https://www.0ffset.net/training/zero2auto/&#34;&gt;Zero2Automated: Advanced Malware Analysis&lt;/a&gt; which ask us to reverse engineer the string decryption routine and write an automation script for it.&lt;/p&gt;&#xA;&lt;p&gt;The sample provided is a Gozi/ISFB malware which is couple of years old and is packed, also checking file entropy of &lt;code&gt;7.5&lt;/code&gt; says many random bytes are present which supports file being packed.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s a PE32 DLL file with &lt;code&gt;SHA256&lt;/code&gt; hash of &lt;code&gt;0a66e8376fc6d9283e500c6e774dc0a109656fd457a0ce7dbf40419bc8d50936&lt;/code&gt;. Strings output consist mostly of random strings, with some noticeable strings here n there like a PDB file path &lt;code&gt;d:\in\the\town\where\ahung.pdb&lt;/code&gt; and a file name &lt;code&gt;myfile.exe&lt;/code&gt; in version info.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
